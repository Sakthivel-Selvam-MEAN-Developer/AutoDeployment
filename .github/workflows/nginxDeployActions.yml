name: NGINX
run-name: ${{ github.actor }} - ${{ github.event.head_commit.message }} commit is running
on:
  workflow_dispatch:
    inputs:
      confirmDeployment:
        description: 'Do you want to run the deployment?'
        required: true
        default: 'no'
        type: choice
        options:
          - 'yes'
          - 'no'
          
jobs:
  AutoDeployment:
    runs-on: ubuntu-latest
    steps:
      - name: Get Runner IP
        run: |
          IP_ADDRESS=$(curl -s https://api.ipify.org)
          echo "IP_ADDRESS=$IP_ADDRESS" >> $GITHUB_ENV

      - name: Set Variables
        run: echo "ELASTIC_IP=ec2-user@44.195.5.175" >> $GITHUB_ENV

      - name: Configure AWS CLI
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Update Security Group
        run: |
          SECURITY_GROUP_ID="sg-0aac2fccc9245503f"
          IP_ADDRESS=${{ env.IP_ADDRESS }}
          aws ec2 authorize-security-group-ingress \
            --group-id $SECURITY_GROUP_ID \
            --protocol tcp \
            --port 22 \
            --cidr ${IP_ADDRESS}/32

      - name: Setup SSH Key
        env:
          SSH_PEM: ${{ secrets.PRIVATE_KEY }}
        run: |
          echo "$SSH_PEM" > deploy_key.pem
          chmod 600 deploy_key.pem
    
      - name: Add remote host to known_hosts # Add this to Startup Scripts on Terraform
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -H 44.195.5.175 >> ~/.ssh/known_hosts

      - name: Clone Repository to EC2
        run: |
          git clone --depth 1 https://github.com/Sakthivel-Selvam-MEAN-Developer/AutoDeployment.git
          rsync -avz -e 'ssh -i deploy_key.pem -o StrictHostKeyChecking=no' AutoDeployment ${{ env.ELASTIC_IP }}:~/

      - name: Clone Secrets to EC2
        run: |
          echo "${{ secrets.FULL_CHAIN }}" > fullchain.pem  
          echo "${{ secrets.PREV_KEY }}" > privkey.pem  
          rsync -avz  -e 'ssh -i deploy_key.pem -o StrictHostKeyChecking=no' fullchain.pem  ${{ env.ELASTIC_IP }}:~/AutoDeployment/nginx/certs/
          rsync -avz  -e 'ssh -i deploy_key.pem -o StrictHostKeyChecking=no' privkey.pem  ${{ env.ELASTIC_IP }}:~/AutoDeployment/nginx/certs/
        
      - name: Start Nginx Container
        run: |
            ssh -i deploy_key.pem ${{ env.ELASTIC_IP }} << EOF
                set -e
                cd AutoDeployment
                docker-compose stop nginx
                docker-compose up nginx -d
            EOF
      - name: Remove Added Security Group Rule
        run: |
          SECURITY_GROUP_ID="sg-0aac2fccc9245503f" 
          IP_ADDRESS=${{ env.IP_ADDRESS }}
          aws ec2 revoke-security-group-ingress \
            --group-id $SECURITY_GROUP_ID \
            --protocol tcp \
            --port 22 \
            --cidr ${IP_ADDRESS}/32