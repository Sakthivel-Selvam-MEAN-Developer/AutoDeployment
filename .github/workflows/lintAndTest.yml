name: Deployment with Approval

on: [push]

jobs:
  approval:
    runs-on: ubuntu-latest
    outputs:
      approved: ${{ steps.approval.outputs.approved }}

    steps:
      - name: Get public IP address
        run: |
          curl -s https://api.ipify.org > runner_ip
          IP_ADDRESS=$(cat runner_ip)
          echo "Runner IP: $IP_ADDRESS"
          echo "IP_ADDRESS=$IP_ADDRESS" >> $GITHUB_ENV

      - name: Configure AWS CLI
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-west-2  # Replace with your region

      - name: Create Security Group
        id: create-sg
        run: |
          SECURITY_GROUP_ID=$(aws ec2 create-security-group --group-name temp-sg --description "Temporary Security Group for GitHub Actions" --query 'GroupId' --output text)
          echo "SECURITY_GROUP_ID=$SECURITY_GROUP_ID" >> $GITHUB_ENV
          echo "Security Group Created: $SECURITY_GROUP_ID"

      - name: Add Inbound Rule
        id: add-rule
        run: |
          aws ec2 authorize-security-group-ingress --group-id ${{ env.SECURITY_GROUP_ID }} --protocol tcp --port 22 --cidr ${{ env.IP_ADDRESS }}/32
          echo "Inbound Rule Added for IP: ${{ env.IP_ADDRESS }}"

      - name: Request Approval
        id: request-approval
        uses: actions/github-script@v6
        with:
          script: |
            const { data: issue } = await github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: 'Deployment Approval Required',
              body: `A deployment requires your approval. Please review and approve the request.\n\n- IP Address: ${{ env.IP_ADDRESS }}\n- Security Group ID: ${{ env.SECURITY_GROUP_ID }}`
            });
            console.log(`Created issue for approval: ${issue.html_url}`);
          github-token: ${{ secrets.GITHUB_TOKEN }}

  deploy:
    needs: approval
    if: needs.approval.outputs.approved == 'true'
    runs-on: ubuntu-latest

    steps:
      - name: Perform Deployment
        run: |
          # Your deployment commands go here
          echo "Performing deployment with Security Group ${{ env.SECURITY_GROUP_ID }}"

      - name: Remove Inbound Rule
        if: success() || failure()
        run: |
          aws ec2 revoke-security-group-ingress --group-id ${{ env.SECURITY_GROUP_ID }} --protocol tcp --port 22 --cidr ${{ env.IP_ADDRESS }}/32
          echo "Inbound Rule Removed for IP: ${{ env.IP_ADDRESS }}"
