// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  output = "./../node_modules/@prisma/client-hrm"
}

datasource db {
  provider = "postgresql"
  url      = env("HRM_DATABASE_URL")
}

model leaveReasons {
  id        Int      @id @default(autoincrement())
  name      String   @unique
  createdAt DateTime @default(now()) @db.Timestamptz(6)
  updatedAt DateTime @updatedAt @db.Timestamptz(6)
  leaves    leaves[]
}

model leaves {
  id            Int          @id @default(autoincrement())
  appliedBy     String
  appliedOn     Int
  from          Int
  to            Int
  isFromHalfDay Boolean
  isToHalfDay   Boolean
  active        Boolean      @default(true)
  approval      Boolean?
  leaveReasonId Int
  leaveReason   leaveReasons @relation(fields: [leaveReasonId], references: [id])
  createdAt     DateTime     @default(now()) @db.Timestamptz(6)
  updatedAt     DateTime     @updatedAt @db.Timestamptz(6)
}

model orgUnits {
  id           Int            @id @default(autoincrement())
  name         String         @unique
  createdAt    DateTime       @default(now()) @db.Timestamptz(6)
  updatedAt    DateTime       @updatedAt @db.Timestamptz(6)
  employees    employees[]
  orgUnitHeads orgUnitHeads[]
}

model employees {
  id           Int            @id @default(autoincrement())
  employeeId   String         @unique
  name         String
  jobTitle     String
  createdAt    DateTime       @default(now()) @db.Timestamptz(6)
  updatedAt    DateTime       @updatedAt @db.Timestamptz(6)
  orgUnitId    Int
  orgUnit      orgUnits       @relation(fields: [orgUnitId], references: [id])
  orgUnitHeads orgUnitHeads[]
}

model orgUnitHeads {
  id          Int        @id @default(autoincrement())
  orgUnit     orgUnits?  @relation(fields: [orgUnitsId], references: [id])
  orgHead     employees? @relation(fields: [employeesId], references: [id])
  orgUnitsId  Int?
  employeesId Int?
}
