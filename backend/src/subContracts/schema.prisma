// model Place {
//   id        Int      @id @default(autoincrement())
//   name      String   @unique @db.VarChar(100)
//   geoFence  Json
//   createdAt DateTime @default(now())
//   updatedAt DateTime @updatedAt
// }

// model CementFactory {
//   id                          Int                           @id @default(autoincrement())
//   name                        String                        @unique @db.VarChar(100)
//   geoFence                    Json
//   createdAt                   DateTime                      @default(now())
//   updatedAt                   DateTime                      @updatedAt
//   // CementFactoryInvoice        CementFactoryInvoice[]
//   FactoryTripToStockPoint     FactoryToStockPointTrip[]
//   StockPointToEndCustomerTrip StockPointToEndCustomerTrip[]
//   FactoryToEndCustomerTrip    FactoryToEndCustomerTrip[]
//   // StockPoint                  StockPoint[]
//   // EndCustomer                 EndCustomer[]
// }

// model StockPoint {
//   id                           Int                           @id @default(autoincrement())
//   name                         String                        @unique @db.VarChar(100)
//   // cementFactoryId              Int
//   // cementFactory                CementFactory                 @relation(fields: [cementFactoryId], references: [id])
//   geoFence                     Json
//   createdAt                    DateTime                      @default(now())
//   updatedAt                    DateTime                      @updatedAt
//   FactoryToStockPointTrips     FactoryToStockPointTrip[]
//   StockPointToEndCustomerTrips StockPointToEndCustomerTrip[]
// }

// model EndCustomer {
//   id                           Int                           @id @default(autoincrement())
//   name                         String                        @unique @db.VarChar(100)
//   // cementFactoryId              Int
//   // cementFactory                CementFactory                 @relation(fields: [cementFactoryId], references: [id])
//   geoFence                     Json
//   createdAt                    DateTime                      @default(now())
//   updatedAt                    DateTime                      @updatedAt
//   StockPointToEndCustomerTrips StockPointToEndCustomerTrip[]
//   FactoryToEndCustomerTrips    FactoryToEndCustomerTrip[]
// }

// model SubContractor {
//   id                    Int                    @id @default(autoincrement())
//   name                  String                 @unique @db.VarChar(100)
//   hasGst                Boolean                @default(false)
//   GSTNo                 String                 @db.VarChar(15)
//   createdAt             DateTime               @default(now())
//   updatedAt             DateTime               @updatedAt
//   subContractorInvoices SubContractorInvoice[]
//   SubContractorTrips    SubContractorTrip[]
// }

// model FactoryToStockPointTrip {
//   id                Int                @id @default(autoincrement())
//   cementFactoryId   Int
//   cementFactory     CementFactory      @relation(fields: [cementFactoryId], references: [id])
//   startTime         Int
//   endTime           Int
//   ratePerTon        Int
//   loadCarried       Int
//   stockPointId      Int
//   stockPoint        StockPoint         @relation(fields: [stockPointId], references: [id])
//   invoiceNumber     String             @unique @db.VarChar(20)
//   createdAt         DateTime           @default(now())
//   updatedAt         DateTime           @updatedAt
//   SubContractorTrip SubContractorTrip?
// }

// model StockPointToEndCustomerTrip {
//   id                Int                @id @default(autoincrement())
//   stockPointId      Int
//   stockPoint        StockPoint         @relation(fields: [stockPointId], references: [id])
//   endCustomerId     Int
//   endCustomer       EndCustomer        @relation(fields: [endCustomerId], references: [id])
//   startTime         Int
//   endTime           Int
//   ratePerTon        Int
//   loadCarried       Int
//   invoiceNumber     String             @unique @db.VarChar(20)
//   createdAt         DateTime           @default(now())
//   updatedAt         DateTime           @updatedAt
//   SubContractorTrip SubContractorTrip?
//   CementFactory     CementFactory?     @relation(fields: [cementFactoryId], references: [id])
//   cementFactoryId   Int?
// }

// model FactoryToEndCustomerTrip {
//   id                Int                @id @default(autoincrement())
//   cementFactoryId   Int
//   cementFactory     CementFactory      @relation(fields: [cementFactoryId], references: [id])
//   endCustomerId     Int
//   endCustomer       EndCustomer        @relation(fields: [endCustomerId], references: [id])
//   invoiceNumber     String             @unique @db.VarChar(20)
//   startTime         Int
//   endTime           Int
//   ratePerTon        Int
//   loadCarried       Int
//   createdAt         DateTime           @default(now())
//   updatedAt         DateTime           @updatedAt
//   SubContractorTrip SubContractorTrip?
// }

// model SubContractorTrip {
//   id                            Int                         @id @default(autoincrement())
//   subContractorId               Int
//   subContractor                 SubContractor               @relation(fields: [subContractorId], references: [id])
//   factoryToStockPointTripId     Int                         @unique
//   factoryToStockPointTrip       FactoryToStockPointTrip     @relation(fields: [factoryToStockPointTripId], references: [id])
//   stockPointToEndCustomerTripId Int                         @unique
//   stockPointToEndCustomerTrip   StockPointToEndCustomerTrip @relation(fields: [stockPointToEndCustomerTripId], references: [id])
//   factoryToEndCustomerTripId    Int                         @unique
//   factoryToEndCustomerTrip      FactoryToEndCustomerTrip    @relation(fields: [factoryToEndCustomerTripId], references: [id])
//   initialRatePerTon             Int
//   finalRatePerTon               Int
//   createdAt                     DateTime                    @default(now())
//   updatedAt                     DateTime                    @updatedAt
//   DieselEntry                   DieselEntry?
// }

// model SubContractorInvoice {
//   id             Int           @id @default(autoincrement())
//   invoiceNumber  String        @unique @db.VarChar(20)
//   subContratorId Int
//   subContrator   SubContractor @relation(fields: [subContratorId], references: [id])
//   createdAt      DateTime      @default(now())
//   updatedAt      DateTime      @updatedAt
// }

// //
// // model CementFactoryInvoice {
// //   id              Int           @id @default(autoincrement())
// //   invoiceNumber   String        @unique @db.VarChar(20)
// //   cementFactoryId Int
// //   cementFactory   CementFactory @relation(fields: [cementFactoryId], references: [id])
// //   createdAt       DateTime      @default(now())
// //   updatedAt       DateTime      @updatedAt
// // }

// model FuelBunk {
//   id          Int           @id @default(autoincrement())
//   name        String        @unique @db.VarChar(100)
//   geoFence    Json
//   createdAt   DateTime      @default(now())
//   updatedAt   DateTime      @updatedAt
//   DieselEntry DieselEntry[]
// }

// model DieselEntry {
//   id                  Int               @id @default(autoincrement())
//   name                String            @unique @db.VarChar(100)
//   fuelBunkId          Int
//   fuelBunk            FuelBunk          @relation(fields: [fuelBunkId], references: [id])
//   subContractorTripId Int               @unique
//   subContractorTrip   SubContractorTrip @relation(fields: [subContractorTripId], references: [id])
//   invoiceNumber       String            @unique @db.VarChar(20)
//   litersFilled        Int
//   dieselRate          Int
//   fillTime            Int
//   createdAt           DateTime          @default(now())
//   updatedAt           DateTime          @updatedAt
// }

// ----------------------------------------------------------------------

model Transporter {
  id            Int         @id @default(autoincrement())
  name          String
  hasGst        Boolean
  gstNumber     Int?
  tdsPercentage Int
  bankDetailsId Int
  bankDetails   BankDetails @relation(fields: [bankDetailsId], references: [id])
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt
  trucks        Truck[]
}

model BankDetails {
  id            Int           @id @default(autoincrement())
  accountHolder String
  accountNumber Int
  ifsc          String
  createdAt     DateTime      @default(now())
  updatedAt     DateTime      @updatedAt
  transporter   Transporter[]
}

model CementCompany {
  id             Int             @id @default(autoincrement())
  name           String
  factories      Factory[]
  stockPoints    StockPoint[]
  deliveryPoints DeliveryPoint[]
  createdAt      DateTime        @default(now())
  updatedAt      DateTime        @updatedAt
}

model Factory {
  id                    Int                       @id @default(autoincrement())
  name                  String
  location              String
  createdAt             DateTime                  @default(now())
  updatedAt             DateTime                  @updatedAt
  factoryToStockTrip    FactoryToStockPointTrip[]
  factoryToCustomerTrip FactoryToCustomerTrip[]
  CementCompany         CementCompany             @relation(fields: [cementCompanyId], references: [id])
  cementCompanyId       Int
}

model StockPoint {
  id                  Int                        @id @default(autoincrement())
  name                String
  location            String
  factoryToStockTrip  FactoryToStockPointTrip[]
  stockToCustomerTrip StockToCustomerPointTrip[]
  createdAt           DateTime                   @default(now())
  updatedAt           DateTime                   @updatedAt
  CementCompany       CementCompany              @relation(fields: [cementCompanyId], references: [id])
  cementCompanyId     Int
}

model DeliveryPoint {
  id                    Int                        @id @default(autoincrement())
  name                  String
  location              String
  stockToCustomerTrip   StockToCustomerPointTrip[]
  factoryToCustomerTrip FactoryToCustomerTrip[]
  createdAt             DateTime                   @default(now())
  updatedAt             DateTime                   @updatedAt
  CementCompany         CementCompany              @relation(fields: [cementCompanyId], references: [id])
  cementCompanyId       Int
}

model FactoryToStockPointTrip {
  id            Int          @id @default(autoincrement())
  fuel          Fuel[]
  startDate     DateTime
  endDate       DateTime
  filledLoad    Int
  invoiceNumber String
  factoryId     Int
  factory       Factory      @relation(fields: [factoryId], references: [id])
  createdAt     DateTime     @default(now())
  updatedAt     DateTime     @updatedAt
  stockPoint    StockPoint   @relation(fields: [stockPointId], references: [id])
  stockPointId  Int
  singleTrip    SingleTrip[]
}

model StockToCustomerPointTrip {
  id              Int           @id @default(autoincrement())
  fuel            Fuel[]
  startDate       DateTime
  endDate         DateTime
  filledLoad      Int
  invoiceNumber   String
  createdAt       DateTime      @default(now())
  updatedAt       DateTime      @updatedAt
  stockPoint      StockPoint    @relation(fields: [stockPointId], references: [id])
  stockPointId    Int
  customerPoint   DeliveryPoint @relation(fields: [customerPointId], references: [id])
  customerPointId Int
  singleTrip      SingleTrip[]
}

model FactoryToCustomerTrip {
  id              Int           @id @default(autoincrement())
  fuel            Fuel[]
  startDate       DateTime
  endDate         DateTime
  filledLoad      Int
  factoryId       Int
  factory         Factory       @relation(fields: [factoryId], references: [id])
  invoiceNumber   String
  createdAt       DateTime      @default(now())
  updatedAt       DateTime      @updatedAt
  customerPoint   DeliveryPoint @relation(fields: [customerPointId], references: [id])
  customerPointId Int
  singleTrip      SingleTrip[]
}

model SingleTrip {
  id                      Int                      @id @default(autoincrement())
  stockToCustomerTripId   Int
  stockToCustomerTrip     StockToCustomerPointTrip @relation(fields: [stockToCustomerTripId], references: [id])
  factoryToStockTripId    Int
  factoryToStockTrip      FactoryToStockPointTrip  @relation(fields: [factoryToStockTripId], references: [id])
  createdAt               DateTime                 @default(now())
  updatedAt               DateTime                 @updatedAt
  FactoryToCustomerTrip   FactoryToCustomerTrip    @relation(fields: [factoryToCustomerTripId], references: [id])
  factoryToCustomerTripId Int
}

model Bunk {
  id           Int      @id @default(autoincrement())
  bunkName     String
  bunkLocation String
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  fuel         Fuel[]
}

model Fuel {
  id                      Int                       @id @default(autoincrement())
  pricePerliter           Int
  quantity                Int
  totalprice              Int
  factoryToStockTripId    Int?
  factoryToStockTrip      FactoryToStockPointTrip?  @relation(fields: [factoryToStockTripId], references: [id])
  stockToCustomerTripId   Int?
  stockToCustomerTrip     StockToCustomerPointTrip? @relation(fields: [stockToCustomerTripId], references: [id])
  bunkId                  Int
  bunk                    Bunk                      @relation(fields: [bunkId], references: [id])
  createdAt               DateTime                  @default(now())
  updatedAt               DateTime                  @updatedAt
  factoryToCustomerTrip   FactoryToCustomerTrip?    @relation(fields: [factoryToCustomerTripId], references: [id])
  factoryToCustomerTripId Int?
}

model Truck {
  id            Int         @id @default(autoincrement())
  vehicleNumber String
  capacity      Int
  transporterId Int
  transporter   Transporter @relation(fields: [transporterId], references: [id])
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt
}

model PricePoint {
  id          Int    @id @default(autoincrement())
  destination String
  pricePerTon Int
}
